//1. soru

//#include <stdio.h>
//#include <stdlib.h>
//#include <time.h>
//
//void insertionSort(int arr[], int n) {
//    int i, key, j;
//    for (i = 1; i < n; i++) {
//        key = arr[i];
//        j = i - 1;
//
//        while (j >= 0 && arr[j] > key) {
//            arr[j + 1] = arr[j];
//            j = j - 1;
//        }
//        arr[j + 1] = key;
//    }
//}
//void selectionSort(int arr[], int n) {
//    int i, j, min_idx;
//    for (i = 0; i < n - 1; i++) {
//        min_idx = i;
//        for (j = i + 1; j < n; j++)
//            if (arr[j] < arr[min_idx])
//                min_idx = j;
//        int temp = arr[min_idx];
//        arr[min_idx] = arr[i];
//        arr[i] = temp;
//    }
//}
//
//int main() {
//    int X[1000];
//    int i;
//    srand(time(NULL));
//    for (i = 0; i < 1000; i++) {
//        X[i] = rand() % 1001;
//    }
//    clock_t start_insertion = clock();
//    insertionSort(X, 1000);
//    clock_t end_insertion = clock();
//    double insertion_time = ((double)(end_insertion - start_insertion)) / CLOCKS_PER_SEC;
//
//    clock_t start_selection = clock();
//    selectionSort(X, 1000);
//    clock_t end_selection = clock();
//    double selection_time = ((double)(end_selection - start_selection)) / CLOCKS_PER_SEC;
//
//    printf("Birlestirmeli Siralama (Insertion Sort) Suresi: %.6f s\n", insertion_time);
//    printf("Secmeli Siralama (Selection Sort) Suresi: %.6f s\n", selection_time);
//
//    return 0;
//}
